--- /Users/zimin/eclipse-workspace/statementDiff/data/CodRep_versions/Dataset4_versions/pre_versions/603.java	2018-10-25 14:41:42.346899552 +0200
+++ /Users/zimin/eclipse-workspace/statementDiff/data/CodRep_versions/Dataset4_versions/post_versions/603.java	2018-10-25 14:41:10.919867699 +0200
@@ -1,39 +1,39 @@
 /*
  * Licensed to Elastic Search and Shay Banon under one
  * or more contributor license agreements.  See the NOTICE file
  * distributed with this work for additional information
  * regarding copyright ownership. Elastic Search licenses this
  * file to you under the Apache License, Version 2.0 (the
  * "License"); you may not use this file except in compliance
  * with the License.  You may obtain a copy of the License at
  *
  *    http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing,
  * software distributed under the License is distributed on an
  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  * KIND, either express or implied.  See the License for the
  * specific language governing permissions and limitations
  * under the License.
  */
 
 package org.elasticsearch.search.query;
 
 import org.apache.lucene.search.Query;
 import org.codehaus.jackson.JsonParser;
 import org.elasticsearch.index.query.json.JsonIndexQueryParser;
 import org.elasticsearch.search.SearchParseElement;
 import org.elasticsearch.search.internal.SearchContext;
 
 /**
  * @author kimchy (Shay Banon)
  */
 public class QueryParseElement implements SearchParseElement {
 
     @Override public void parse(JsonParser jp, SearchContext context) throws Exception {
         JsonIndexQueryParser indexQueryParser = (JsonIndexQueryParser) context.queryParser();
-        Query query = indexQueryParser.parse(jp, context.source());
+        Query query = indexQueryParser.parse(jp);
         query.setBoost(query.getBoost() * context.queryBoost());
         context.query(query);
     }
 }
